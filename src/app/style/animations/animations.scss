@use "sass:map";

// the ease function that is used in the animation
$bouncyEaseFunction: cubic-bezier(0.53, 2.02, 0.55, 0.72);
$springEaseFunction: linear(
                0, 0.009, 0.035 2.1%, 0.141, 0.281 6.7%, 0.723 12.9%, 0.938 16.7%, 1.017,
                1.077, 1.121, 1.149 24.3%, 1.159, 1.163, 1.161, 1.154 29.9%, 1.129 32.8%,
                1.051 39.6%, 1.017 43.1%, 0.991, 0.977 51%, 0.974 53.8%, 0.975 57.1%,
                0.997 69.8%, 1.003 76.9%, 1.004 83.8%, 1
);
$materialEasFunction: linear(
                0, 0.002, 0.01 3.6%, 0.034, 0.074 9.1%, 0.128 11.4%, 0.194 13.4%, 0.271 15%,
                0.344 16.1%, 0.544, 0.66 20.6%, 0.717 22.4%, 0.765 24.6%, 0.808 27.3%,
                0.845 30.4%, 0.883 35.1%, 0.916 40.6%, 0.942 47.2%, 0.963 55%, 0.979 64%,
                0.991 74.4%, 0.998 86.4%, 1
);

$easeFunctions: ("bounce": $bouncyEaseFunction, "spring": $springEaseFunction, "ease": $materialEasFunction);
@function timingFunction($name) {
  @return map.get($easeFunctions, $name);
}

$animationNames: ("slideIn": slideIn, "pop": pop, "revealFromLeft": revealFromLeft);
@function animation($name) {
  @return map.get($animationNames, $name);
}
@keyframes slideIn {
  from {
    transform: translateY(2vh);
    opacity: 0;
    filter: blur(10px);
  }
}


@keyframes pop {
  from {
    scale: .5 0;
  }
  to {
    scale:1;
  }
}

@keyframes revealFromLeft {
  from {
    clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  }
}
